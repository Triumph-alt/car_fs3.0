C251 COMPILER V5.60.0,  motor                                                              18/07/25  22:42:56  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE motor
OBJECT MODULE PLACED IN .\Out_File\motor.obj
COMPILER INVOKED BY: D:\Software\Keil5\c251v560\C251\BIN\C251.EXE ..\USER\src\motor.c LARGE INTR2 WARNINGLEVEL(3) OPTIMI
                    -ZE(0,SPEED) BROWSE INCDIR(..\USER\inc;..\USER\src;..\libraries;..\seekfree_libraries;..\seekfree_peripheral) DEBUG PRINT
                    -(.\Out_File\motor.lst) OBJECT(.\Out_File\motor.obj) 

stmt  level    source

    1          #include "motor.h"
    2          
    3          void motor_init(void)
    4          {
    5   1              /* 左轮初始化 */
    6   1              pwm_init(PWMA_CH1P_P60, MOTOR_PWM_FREQ, 0);
    7   1              pwm_init(PWMA_CH2P_P62, MOTOR_PWM_FREQ, 0);
    8   1              
    9   1              /* 右轮初始化 */
   10   1              pwm_init(PWMA_CH3P_P64, MOTOR_PWM_FREQ, 0);
   11   1              pwm_init(PWMA_CH4P_P66, MOTOR_PWM_FREQ, 0);
   12   1      }
   13          
   14          void set_motor_pwm(int32_t left_duty, int32_t right_duty)
   15          {
   16   1              /* 左轮PWM限幅并输出 */
   17   1              if(left_duty >= 0)
   18   1              {
   19   2                      if (left_duty > MOTOR_PWM_LIMIT)
   20   2                      {
   21   3                              left_duty = MOTOR_PWM_LIMIT;
   22   3                      }
   23   2              
   24   2                      pwm_duty(PWMA_CH1P_P60, left_duty);
   25   2                      pwm_duty(PWMA_CH2P_P62, 0);
   26   2              }
   27   1              else
   28   1              {
   29   2                      if (left_duty < -MOTOR_PWM_LIMIT)
   30   2                      {
   31   3                              left_duty = -MOTOR_PWM_LIMIT;
   32   3                      }
   33   2              
   34   2                      pwm_duty(PWMA_CH1P_P60, 0);
   35   2                      pwm_duty(PWMA_CH2P_P62, -left_duty);
   36   2              }
   37   1              
   38   1              /* 右轮PWM限幅并输出 */
   39   1              if (right_duty >= 0)
   40   1              {
   41   2                      if (right_duty > MOTOR_PWM_LIMIT)
   42   2                      {
   43   3                              right_duty = MOTOR_PWM_LIMIT;
   44   3                      }
   45   2                      
   46   2                      pwm_duty(PWMA_CH3P_P64, right_duty);
   47   2                      pwm_duty(PWMA_CH4P_P66, 0);
   48   2              }
   49   1              else    
   50   1              {
   51   2                      if (right_duty < -MOTOR_PWM_LIMIT)
   52   2                      {
   53   3                              right_duty = -MOTOR_PWM_LIMIT;
   54   3                      }
   55   2                      
   56   2                      pwm_duty(PWMA_CH3P_P64, 0);
   57   2                      pwm_duty(PWMA_CH4P_P66, -right_duty);
C251 COMPILER V5.60.0,  motor                                                              18/07/25  22:42:56  PAGE 2   

   58   2      //              pwm_duty(PWMA_CH4P_P66, 0);
   59   2              }
   60   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       394     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
