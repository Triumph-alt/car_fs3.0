C251 COMPILER V5.60.0,  transfer                                                           06/07/25  17:11:21  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE transfer
OBJECT MODULE PLACED IN .\Out_File\transfer.obj
COMPILER INVOKED BY: D:\Software\Keil5\c251v560\C251\BIN\C251.EXE ..\USER\src\transfer.c LARGE INTR2 WARNINGLEVEL(3) OPT
                    -IMIZE(0,SPEED) BROWSE INCDIR(..\USER\inc;..\USER\src;..\libraries;..\seekfree_libraries;..\seekfree_peripheral) DEBUG PR
                    -INT(.\Out_File\transfer.lst) TABS(2) OBJECT(.\Out_File\transfer.obj) 

stmt  level    source

    1          #include "transfer.h"
    2          #include "OLED.h"
    3          #include "electromagnetic_tracking.h"
    4          #include "pid.h"
    5          #include "at24c16.h"
    6          
    7          Key_t key[4] = {0, 0, 0, 0};
    8          enum state car_state; 
    9          uint8 selected_item = 0; // 当前选中的项目索引
   10          
   11          //----------------------------------------------------------------------------- 
   12          // @brief    保存 max_value 数组与 PID 参数到 AT24C16 EEPROM
   13          // @note     采用如下地址映射：
   14          //           Page0  Addr0~13   -> max_value[0..6]   (每个 uint16 占 2 字节)
   15          //           Page1  Addr0~11   -> SpeedPID  kp,ki,kd (每个 float 占 4 字节)
   16          //           Page2  Addr0~11   -> TurnPID   kp,ki,kd (每个 float 占 4 字节)
   17          //           如需调整映射，请同步修改读取函数
   18          //-----------------------------------------------------------------------------
   19          void save_parameters_to_eeprom(void)
   20          {
   21   1          uint8_t i;
   22   1          /* 1. 写入 max_value (uint16) */
   23   1          for(i = 0; i < 7; i++)
   24   1          {
   25   2              /* Page0 起始地址按 2*i */
   26   2              at24c16_write_twobytes(0, (uint8_t)(i * 2), max_value[i]);
   27   2          }
   28   1      
   29   1          /* 工具宏：将 float 拆分为 4 个字节并写入 */
   30   1          #define WRITE_FLOAT_TO_EEPROM(base_page, base_offset, fval)                 \
   31   1              do{                                                                    \
   32   1                  union { float f; uint8_t b[4]; } _u;                               \
   33   1                  uint8_t  _k;                                                       \
   34   1                  uint16_t _off;                                                     \
   35   1                  uint8_t  _pg, _ad;                                                 \
   36   1                  _u.f = (fval);                                                     \
   37   1                  for(_k = 0; _k < 4; _k++)                                          \
   38   1                  {                                                                  \
   39   1                      _off = (base_offset) + _k;                                     \
   40   1                      _pg  = (uint8_t)((base_page) + (_off / 16));                  \
   41   1                      _ad  = (uint8_t)(_off % 16);                                   \
   42   1                      at24c16_write_byte(_pg, _ad, _u.b[_k]);                        \
   43   1                  }                                                                  \
   44   1              }while(0)
   45   1      
   46   1          /* 2. 写入 SpeedPID 参数到 Page1 起始偏移 0 */
   47   1          WRITE_FLOAT_TO_EEPROM(1, 0, SpeedPID.kp);
   48   1          WRITE_FLOAT_TO_EEPROM(1, 4, SpeedPID.ki);
   49   1          WRITE_FLOAT_TO_EEPROM(1, 8, SpeedPID.kd);
   50   1      
   51   1          /* 3. 写入 TurnPID 参数到 Page2 起始偏移 0 */
   52   1          WRITE_FLOAT_TO_EEPROM(2, 0, TurnPID.kp);
   53   1          WRITE_FLOAT_TO_EEPROM(2, 4, TurnPID.ki);
   54   1          WRITE_FLOAT_TO_EEPROM(2, 8, TurnPID.kd);
   55   1      
   56   1          #undef WRITE_FLOAT_TO_EEPROM
   57   1      }
C251 COMPILER V5.60.0,  transfer                                                           06/07/25  17:11:21  PAGE 2   

   58          
   59          void key_task(void)
   60          {
   61   1        if (key[0].flag == 1)
   62   1        {
   63   2              enum state prev_state = car_state;   // 记录切换前状态
   64   2              if (car_state < RUNNING)
   65   2              {
   66   3                  car_state++;
   67   3                  oled_clear();
   68   3                  selected_item = 0; // 切换状态时重置选中项
   69   3      
   70   3                  /* 若从 PID_PARA 切换到 CHARGE，保存参数 */
   71   3                  if(prev_state == PID_PARA && car_state == CHARGE)
   72   3                  {
   73   4                      save_parameters_to_eeprom();
   74   4                  }
   75   3              }
   76   2          
   77   2          key[0].flag = 0;
   78   2        }
   79   1      
   80   1        if (key[1].flag == 1)
   81   1        {
   82   2              // 按键1作为选择按键
   83   2              switch (car_state)
   84   2              {
   85   3                  case ELECT_PARA:
   86   3                      // 在电感参数界面，最多7个选项(max_value数组)
   87   3                      selected_item = (selected_item + 1) % 7;
   88   3                      break;
   89   3                      
   90   3                  case PID_PARA:
   91   3                      // 在PID参数界面，最多6个选项(SpeedPID和TurnPID的kp,ki,kd)
   92   3                      selected_item = (selected_item + 1) % 6;
   93   3                      break;
   94   3                      
   95   3                  default:
   96   3                      break;
   97   3              }
   98   2          
   99   2          key[1].flag = 0;
  100   2        }
  101   1      
  102   1        if (key[2].flag == 1)
  103   1        {
  104   2              // 按键2作为增加值的按键
  105   2              switch (car_state)
  106   2              {
  107   3                  case ELECT_PARA:
  108   3                      // 增加选中的max_value值
  109   3                      if (selected_item < 7)
  110   3                      {
  111   4                          max_value[selected_item] += 10; // 每次增加10
  112   4                      }
  113   3                      break;
  114   3                      
  115   3                  case PID_PARA:
  116   3                      // 增加选中的PID参数
  117   3                      if (selected_item == 0) SpeedPID.kp += 0.1f;
  118   3                      else if (selected_item == 1) SpeedPID.ki += 0.1f;
  119   3                      else if (selected_item == 2) SpeedPID.kd += 0.1f;
  120   3                      else if (selected_item == 3) TurnPID.kp += 0.1f;
  121   3                      else if (selected_item == 4) TurnPID.ki += 0.1f;
  122   3                      else if (selected_item == 5) TurnPID.kd += 0.1f;
  123   3                      break;
C251 COMPILER V5.60.0,  transfer                                                           06/07/25  17:11:21  PAGE 3   

  124   3                      
  125   3                  default:
  126   3                      break;
  127   3              }
  128   2          
  129   2          key[2].flag = 0;
  130   2        }
  131   1      
  132   1        if (key[3].flag == 1)
  133   1        {
  134   2              // 按键3作为减少值的按键
  135   2              switch (car_state)
  136   2              {
  137   3                  case ELECT_PARA:
  138   3                      // 减少选中的max_value值
  139   3                      if (selected_item < 7 && max_value[selected_item] >= 10)
  140   3                      {
  141   4                          max_value[selected_item] -= 10; // 每次减少10
  142   4                      }
  143   3                      break;
  144   3                      
  145   3                  case PID_PARA:
  146   3                      // 减少选中的PID参数
  147   3                      if (selected_item == 0 && SpeedPID.kp >= 0.1f) SpeedPID.kp -= 0.1f;
  148   3                      else if (selected_item == 1 && SpeedPID.ki >= 0.1f) SpeedPID.ki -= 0.1f;
  149   3                      else if (selected_item == 2 && SpeedPID.kd >= 0.1f) SpeedPID.kd -= 0.1f;
  150   3                      else if (selected_item == 3 && TurnPID.kp >= 0.1f) TurnPID.kp -= 0.1f;
  151   3                      else if (selected_item == 4 && TurnPID.ki >= 0.1f) TurnPID.ki -= 0.1f;
  152   3                      else if (selected_item == 5 && TurnPID.kd >= 0.1f) TurnPID.kd -= 0.1f;
  153   3                      break;
  154   3                      
  155   3                  default:
  156   3                      break;
  157   3              }
  158   2          
  159   2          key[3].flag = 0;
  160   2        }
  161   1      }
  162          
  163          /* 8行，21列*/
  164          void display_task(void)
  165          {
  166   1          switch (car_state)
  167   1          {
  168   2              case ELECT_PARA:
  169   2                  {
  170   3                      oled_show_string(1, 8, "max_v:");
  171   3                      
  172   3                      // 显示电感名称，选中项前添加'>'标记
  173   3                      oled_show_string(2, 1, selected_item == 0 ? ">HL :" : "HL :");
  174   3                      oled_show_string(3, 1, selected_item == 1 ? ">HML:" : "HML:");
  175   3                      oled_show_string(4, 1, selected_item == 2 ? ">HC :" : "HC :");
  176   3                      oled_show_string(5, 1, selected_item == 3 ? ">HMR:" : "HMR:");
  177   3                      oled_show_string(6, 1, selected_item == 4 ? ">VR :" : "VR :");
  178   3                      oled_show_string(7, 1, selected_item == 5 ? ">HR :" : "HR :");
  179   3                      oled_show_string(8, 1, selected_item == 6 ? ">VL :" : "VL :");
  180   3      
  181   3                      oled_show_num(2, 8, max_value[0], 4);
  182   3                      oled_show_num(3, 8, max_value[1], 4);
  183   3                      oled_show_num(4, 8, max_value[2], 4);
  184   3                      oled_show_num(5, 8, max_value[3], 4);
  185   3                      oled_show_num(6, 8, max_value[4], 4);
  186   3                      oled_show_num(7, 8, max_value[5], 4);
  187   3                      oled_show_num(8, 8, max_value[6], 4);
  188   3                  }
  189   2                  break;
C251 COMPILER V5.60.0,  transfer                                                           06/07/25  17:11:21  PAGE 4   

  190   2      
  191   2              case PID_PARA:
  192   2                  {
  193   3                      oled_show_string(1, 8, "pidpara");
  194   3                      
  195   3                      // 显示PID参数名称，选中项前添加'>'标记
  196   3                      oled_show_string(2, 1, selected_item == 0 ? ">S_Kp:" : "S_Kp:");
  197   3                      oled_show_string(3, 1, selected_item == 1 ? ">S_Ki:" : "S_Ki:");
  198   3                      oled_show_string(4, 1, selected_item == 2 ? ">S_Kd:" : "S_Kd:");
  199   3                      oled_show_string(5, 1, selected_item == 3 ? ">T_Kp:" : "T_Kp:");
  200   3                      oled_show_string(6, 1, selected_item == 4 ? ">T_Ki:" : "T_Ki:");
  201   3                      oled_show_string(7, 1, selected_item == 5 ? ">T_Kd:" : "T_Kd:");
  202   3      
  203   3                      oled_show_float(2, 8, SpeedPID.kp);
  204   3                      oled_show_float(3, 8, SpeedPID.ki);
  205   3                      oled_show_float(4, 8, SpeedPID.kd);
  206   3                      oled_show_float(5, 8, TurnPID.kp);
  207   3                      oled_show_float(6, 8, TurnPID.ki);
  208   3                      oled_show_float(7, 8, TurnPID.kd);
  209   3                  }
  210   2                  break;
  211   2      
  212   2              case CHARGE:
  213   2                  {
  214   3                      oled_show_string(1, 1, "charge");
  215   3                  }
  216   2                  break;
  217   2      
  218   2              case RUNNING:
  219   2                  {
  220   3                      oled_show_string(1, 1, "running");
  221   3                  }
  222   2                  break;
  223   2              
  224   2              default:
  225   2                  break;
  226   2          }
  227   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2753     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        27     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       208     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
