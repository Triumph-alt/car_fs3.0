C251 COMPILER V5.60.0,  encoder                                                            10/07/25  23:18:23  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: D:\Software\Keil5\c251v560\C251\BIN\C251.EXE ..\USER\src\encoder.c LARGE INTR2 WARNINGLEVEL(3) OPTI
                    -MIZE(0,SPEED) BROWSE INCDIR(..\USER\inc;..\USER\src;..\libraries;..\seekfree_libraries;..\seekfree_peripheral) DEBUG PRI
                    -NT(.\Out_File\encoder.lst) OBJECT(.\Out_File\encoder.obj) 

stmt  level    source

    1          #include "encoder.h"
    2          
    3          Encoder_t EncoderL, EncoderR;
    4          EncoderDebo_t EncoderDeboL, EncoderDeboR;
    5          
    6          void encoder_init(void)
    7          {
    8   1          EncoderL.encoder_original = 0;
    9   1          EncoderL.encoder_integral = 0;
   10   1          EncoderL.encoder_final = 0;
   11   1      
   12   1          EncoderR.encoder_integral = 0;
   13   1          EncoderR.encoder_original = 0;
   14   1          EncoderR.encoder_final = 0;
   15   1              
   16   1              EncoderDeboL.encoderlast = 0;
   17   1              EncoderDeboL.count = 0;
   18   1              
   19   1              EncoderDeboR.encoderlast = 0;
   20   1              EncoderDeboR.count = 0;
   21   1              
   22   1              ctimer_count_init(CTIM0_P34);
   23   1              ctimer_count_init(CTIM3_P04);
   24   1      }
   25          
   26          int get_left_encoder(void)
   27          {
   28   1              int encoder_left;
   29   1              
   30   1              if(LEFT_DIR == 1)
   31   1              {
   32   2                      encoder_left = ctimer_count_read(CTIM0_P34);
   33   2              }
   34   1              else
   35   1              {
   36   2                      encoder_left = ctimer_count_read(CTIM0_P34) * -1;
   37   2              }
   38   1              
   39   1              ctimer_count_clean(CTIM0_P34);
   40   1              
   41   1              return encoder_left;
   42   1      }
   43          
   44          int get_right_encoder(void)
   45          {
   46   1              int encoder_right;
   47   1              
   48   1              if(RIGHT_DIR == 1)
   49   1              {
   50   2                      encoder_right = ctimer_count_read(CTIM3_P04) * -1;
   51   2              }
   52   1              else
   53   1              {
   54   2                      encoder_right = ctimer_count_read(CTIM3_P04);
   55   2              }
   56   1              
   57   1              ctimer_count_clean(CTIM3_P04);
C251 COMPILER V5.60.0,  encoder                                                            10/07/25  23:18:23  PAGE 2   

   58   1              
   59   1              return encoder_right;
   60   1      }
   61          
   62          int encoder_debounce(EncoderDebo_t* instance, int encoder)
   63          {
   64   1              if (myabs(encoder - instance->encoderlast) > 20 && instance->count >= 5)
   65   1              {
   66   2                      encoder = instance->encoderlast;
   67   2                      instance->count = 0;
   68   2              }
   69   1              else
   70   1              {
   71   2                      instance->encoderlast = encoder;
   72   2                      
   73   2                      instance->count++;
   74   2                      if (instance->count >= 10000)
   75   2                      {
   76   3                              instance->count = 0;
   77   3                      }
   78   2              }
   79   1              
   80   1              return encoder;
   81   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       396     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        30     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
